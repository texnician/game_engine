/* Automatically generated by D:\csapp\game_framework\src\parse_array.py, DO NOT edit by hand. */
%include pybuffer.i
%pybuffer_mutable_string(char *outMemBuf);
%pybuffer_string(const char *inMemBuf);

%include carrays.i
%include cdata.i
/* Opt */
//%array_funtions(Opt, Opt_Array);
/* unsigned char */
%array_funtions(unsigned char, unsigned_char_Array)
/* ROLE_INFO */
//%array_funtions(ROLE_INFO, ROLE_INFO_Array);
/* ACC_INFO */
// %array_funtions(ACC_INFO, ACC_INFO_Array);

%inline %{

/* Opt */
    size_t sizeof_ACC_INFO() { return sizeof(Opt); }

    PyObject* ACC_INFO_ArrayFromBuffer(Opt *outArrayBuf, int outArrayItemNumber,
                                  const char *inMemBuf, int inMemBufSize)
    {
        if (outArrayItemNumber * sizeof(Opt) >= inMemBufSize) {
            memcpy(outArrayBuf, inMemBuf, inMemBufSize);
            return PyInt_FromLong(inMemBufSize);
        }
        else {
            return Py_None;
        }
     }

     PyObject* ACC_INFO_ArrayToBuffer(char *outMemBuf, int outMemBufSize,
                                 Opt *inArrayBuf, int inArrayItemNumber)
     {
         size_t in_array_size = sizeof(Opt) * inArrayItemNumber;
         if (outMemBufSize >= in_array_size) {
             memcpy(outMemBuf, inArrayBuf, in_array_size);
             return PyInt_FromLong(in_array_size);
         }
         else {
             return Py_None;
         }
      }

/* unsigned char */
    size_t sizeof_ACC_INFO() { return sizeof(unsigned char); }

    PyObject* ACC_INFO_ArrayFromBuffer(unsigned char *outArrayBuf, int outArrayItemNumber,
                                  const char *inMemBuf, int inMemBufSize)
    {
        if (outArrayItemNumber * sizeof(unsigned char) >= inMemBufSize) {
            memcpy(outArrayBuf, inMemBuf, inMemBufSize);
            return PyInt_FromLong(inMemBufSize);
        }
        else {
            return Py_None;
        }
     }

     PyObject* ACC_INFO_ArrayToBuffer(char *outMemBuf, int outMemBufSize,
                                 unsigned char *inArrayBuf, int inArrayItemNumber)
     {
         size_t in_array_size = sizeof(unsigned char) * inArrayItemNumber;
         if (outMemBufSize >= in_array_size) {
             memcpy(outMemBuf, inArrayBuf, in_array_size);
             return PyInt_FromLong(in_array_size);
         }
         else {
             return Py_None;
         }
      }

/* ROLE_INFO */
    size_t sizeof_ACC_INFO() { return sizeof(ROLE_INFO); }

    PyObject* ACC_INFO_ArrayFromBuffer(ROLE_INFO *outArrayBuf, int outArrayItemNumber,
                                  const char *inMemBuf, int inMemBufSize)
    {
        if (outArrayItemNumber * sizeof(ROLE_INFO) >= inMemBufSize) {
            memcpy(outArrayBuf, inMemBuf, inMemBufSize);
            return PyInt_FromLong(inMemBufSize);
        }
        else {
            return Py_None;
        }
     }

     PyObject* ACC_INFO_ArrayToBuffer(char *outMemBuf, int outMemBufSize,
                                 ROLE_INFO *inArrayBuf, int inArrayItemNumber)
     {
         size_t in_array_size = sizeof(ROLE_INFO) * inArrayItemNumber;
         if (outMemBufSize >= in_array_size) {
             memcpy(outMemBuf, inArrayBuf, in_array_size);
             return PyInt_FromLong(in_array_size);
         }
         else {
             return Py_None;
         }
      }

/* ACC_INFO */
    size_t sizeof_ACC_INFO() { return sizeof(ACC_INFO); }

    PyObject* ACC_INFO_ArrayFromBuffer(ACC_INFO *outArrayBuf, int outArrayItemNumber,
                                  const char *inMemBuf, int inMemBufSize)
    {
        if (outArrayItemNumber * sizeof(ACC_INFO) >= inMemBufSize) {
            memcpy(outArrayBuf, inMemBuf, inMemBufSize);
            return PyInt_FromLong(inMemBufSize);
        }
        else {
            return Py_None;
        }
     }

     PyObject* ACC_INFO_ArrayToBuffer(char *outMemBuf, int outMemBufSize,
                                 ACC_INFO *inArrayBuf, int inArrayItemNumber)
     {
         size_t in_array_size = sizeof(ACC_INFO) * inArrayItemNumber;
         if (outMemBufSize >= in_array_size) {
             memcpy(outMemBuf, inArrayBuf, in_array_size);
             return PyInt_FromLong(in_array_size);
         }
         else {
             return Py_None;
         }
      }
%}

/* D:\csapp\game_framework\src\game_framework_array.i Ends here. */
